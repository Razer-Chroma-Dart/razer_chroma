// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings to the Razer Chroma macOS library (librazermacos).
class Driver {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Driver(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Driver.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int razer_send_control_msg(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Void> data,
    int report_index,
  ) {
    return _razer_send_control_msg(
      dev,
      data,
      report_index,
    );
  }

  late final _razer_send_control_msg_ptr =
      _lookup<ffi.NativeFunction<_c_razer_send_control_msg>>(
          'razer_send_control_msg');
  late final _dart_razer_send_control_msg _razer_send_control_msg =
      _razer_send_control_msg_ptr.asFunction<_dart_razer_send_control_msg>();

  int razer_send_control_msg_old_device(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Void> data,
    int report_value,
    int report_index,
    int report_size,
  ) {
    return _razer_send_control_msg_old_device(
      dev,
      data,
      report_value,
      report_index,
      report_size,
    );
  }

  late final _razer_send_control_msg_old_device_ptr =
      _lookup<ffi.NativeFunction<_c_razer_send_control_msg_old_device>>(
          'razer_send_control_msg_old_device');
  late final _dart_razer_send_control_msg_old_device
      _razer_send_control_msg_old_device =
      _razer_send_control_msg_old_device_ptr
          .asFunction<_dart_razer_send_control_msg_old_device>();

  int razer_get_usb_response(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    int report_index,
    ffi.Pointer<razer_report> request_report,
    int response_index,
    ffi.Pointer<razer_report> response_report,
    int wait_us,
  ) {
    return _razer_get_usb_response(
      dev,
      report_index,
      request_report,
      response_index,
      response_report,
      wait_us,
    );
  }

  late final _razer_get_usb_response_ptr =
      _lookup<ffi.NativeFunction<_c_razer_get_usb_response>>(
          'razer_get_usb_response');
  late final _dart_razer_get_usb_response _razer_get_usb_response =
      _razer_get_usb_response_ptr.asFunction<_dart_razer_get_usb_response>();

  int razer_calculate_crc(
    ffi.Pointer<razer_report> report,
  ) {
    return _razer_calculate_crc(
      report,
    );
  }

  late final _razer_calculate_crc_ptr =
      _lookup<ffi.NativeFunction<_c_razer_calculate_crc>>(
          'razer_calculate_crc');
  late final _dart_razer_calculate_crc _razer_calculate_crc =
      _razer_calculate_crc_ptr.asFunction<_dart_razer_calculate_crc>();

  int clamp_u8(
    int value,
    int min,
    int max,
  ) {
    return _clamp_u8(
      value,
      min,
      max,
    );
  }

  late final _clamp_u8_ptr =
      _lookup<ffi.NativeFunction<_c_clamp_u8>>('clamp_u8');
  late final _dart_clamp_u8 _clamp_u8 =
      _clamp_u8_ptr.asFunction<_dart_clamp_u8>();

  int clamp_u16(
    int value,
    int min,
    int max,
  ) {
    return _clamp_u16(
      value,
      min,
      max,
    );
  }

  late final _clamp_u16_ptr =
      _lookup<ffi.NativeFunction<_c_clamp_u16>>('clamp_u16');
  late final _dart_clamp_u16 _clamp_u16 =
      _clamp_u16_ptr.asFunction<_dart_clamp_u16>();

  bool is_blade_laptop(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _is_blade_laptop(
          usb_dev,
        ) !=
        0;
  }

  late final _is_blade_laptop_ptr =
      _lookup<ffi.NativeFunction<_c_is_blade_laptop>>('is_blade_laptop');
  late final _dart_is_blade_laptop _is_blade_laptop =
      _is_blade_laptop_ptr.asFunction<_dart_is_blade_laptop>();

  int razer_attr_read_mode_game(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_mode_game(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_mode_game_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_mode_game>>(
          'razer_attr_read_mode_game');
  late final _dart_razer_attr_read_mode_game _razer_attr_read_mode_game =
      _razer_attr_read_mode_game_ptr
          .asFunction<_dart_razer_attr_read_mode_game>();

  int razer_attr_write_mode_macro(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_macro(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_macro_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_macro>>(
          'razer_attr_write_mode_macro');
  late final _dart_razer_attr_write_mode_macro _razer_attr_write_mode_macro =
      _razer_attr_write_mode_macro_ptr
          .asFunction<_dart_razer_attr_write_mode_macro>();

  int razer_attr_write_mode_macro_effect(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_macro_effect(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_macro_effect_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_macro_effect>>(
          'razer_attr_write_mode_macro_effect');
  late final _dart_razer_attr_write_mode_macro_effect
      _razer_attr_write_mode_macro_effect =
      _razer_attr_write_mode_macro_effect_ptr
          .asFunction<_dart_razer_attr_write_mode_macro_effect>();

  int razer_attr_read_mode_macro_effect(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_mode_macro_effect(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_mode_macro_effect_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_mode_macro_effect>>(
          'razer_attr_read_mode_macro_effect');
  late final _dart_razer_attr_read_mode_macro_effect
      _razer_attr_read_mode_macro_effect =
      _razer_attr_read_mode_macro_effect_ptr
          .asFunction<_dart_razer_attr_read_mode_macro_effect>();

  int razer_attr_write_mode_pulsate(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_pulsate(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_pulsate_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_pulsate>>(
          'razer_attr_write_mode_pulsate');
  late final _dart_razer_attr_write_mode_pulsate
      _razer_attr_write_mode_pulsate = _razer_attr_write_mode_pulsate_ptr
          .asFunction<_dart_razer_attr_write_mode_pulsate>();

  int razer_attr_read_mode_pulsate(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_mode_pulsate(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_mode_pulsate_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_mode_pulsate>>(
          'razer_attr_read_mode_pulsate');
  late final _dart_razer_attr_read_mode_pulsate _razer_attr_read_mode_pulsate =
      _razer_attr_read_mode_pulsate_ptr
          .asFunction<_dart_razer_attr_read_mode_pulsate>();

  int razer_attr_read_tartarus_profile_led_red(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_tartarus_profile_led_red(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_tartarus_profile_led_red_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_tartarus_profile_led_red>>(
          'razer_attr_read_tartarus_profile_led_red');
  late final _dart_razer_attr_read_tartarus_profile_led_red
      _razer_attr_read_tartarus_profile_led_red =
      _razer_attr_read_tartarus_profile_led_red_ptr
          .asFunction<_dart_razer_attr_read_tartarus_profile_led_red>();

  int razer_attr_read_tartarus_profile_led_green(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_tartarus_profile_led_green(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_tartarus_profile_led_green_ptr = _lookup<
          ffi.NativeFunction<_c_razer_attr_read_tartarus_profile_led_green>>(
      'razer_attr_read_tartarus_profile_led_green');
  late final _dart_razer_attr_read_tartarus_profile_led_green
      _razer_attr_read_tartarus_profile_led_green =
      _razer_attr_read_tartarus_profile_led_green_ptr
          .asFunction<_dart_razer_attr_read_tartarus_profile_led_green>();

  int razer_attr_read_tartarus_profile_led_blue(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_tartarus_profile_led_blue(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_tartarus_profile_led_blue_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_tartarus_profile_led_blue>>(
          'razer_attr_read_tartarus_profile_led_blue');
  late final _dart_razer_attr_read_tartarus_profile_led_blue
      _razer_attr_read_tartarus_profile_led_blue =
      _razer_attr_read_tartarus_profile_led_blue_ptr
          .asFunction<_dart_razer_attr_read_tartarus_profile_led_blue>();

  int razer_attr_read_get_firmware_version(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_get_firmware_version(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_get_firmware_version_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_get_firmware_version>>(
          'razer_attr_read_get_firmware_version');
  late final _dart_razer_attr_read_get_firmware_version
      _razer_attr_read_get_firmware_version =
      _razer_attr_read_get_firmware_version_ptr
          .asFunction<_dart_razer_attr_read_get_firmware_version>();

  int razer_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_none>>(
          'razer_attr_write_mode_none');
  late final _dart_razer_attr_write_mode_none _razer_attr_write_mode_none =
      _razer_attr_write_mode_none_ptr
          .asFunction<_dart_razer_attr_write_mode_none>();

  int razer_attr_write_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
    int speed,
  ) {
    return _razer_attr_write_mode_wave(
      usb_dev,
      buf,
      count,
      speed,
    );
  }

  late final _razer_attr_write_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_wave>>(
          'razer_attr_write_mode_wave');
  late final _dart_razer_attr_write_mode_wave _razer_attr_write_mode_wave =
      _razer_attr_write_mode_wave_ptr
          .asFunction<_dart_razer_attr_write_mode_wave>();

  int razer_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_spectrum>>(
          'razer_attr_write_mode_spectrum');
  late final _dart_razer_attr_write_mode_spectrum
      _razer_attr_write_mode_spectrum = _razer_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_attr_write_mode_spectrum>();

  int razer_attr_write_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_reactive(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_reactive>>(
          'razer_attr_write_mode_reactive');
  late final _dart_razer_attr_write_mode_reactive
      _razer_attr_write_mode_reactive = _razer_attr_write_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_mode_reactive>();

  int razer_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_static>>(
          'razer_attr_write_mode_static');
  late final _dart_razer_attr_write_mode_static _razer_attr_write_mode_static =
      _razer_attr_write_mode_static_ptr
          .asFunction<_dart_razer_attr_write_mode_static>();

  int razer_attr_write_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_static_no_store_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_static_no_store>>(
          'razer_attr_write_mode_static_no_store');
  late final _dart_razer_attr_write_mode_static_no_store
      _razer_attr_write_mode_static_no_store =
      _razer_attr_write_mode_static_no_store_ptr
          .asFunction<_dart_razer_attr_write_mode_static_no_store>();

  int razer_attr_write_mode_starlight(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_starlight(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_starlight_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_starlight>>(
          'razer_attr_write_mode_starlight');
  late final _dart_razer_attr_write_mode_starlight
      _razer_attr_write_mode_starlight = _razer_attr_write_mode_starlight_ptr
          .asFunction<_dart_razer_attr_write_mode_starlight>();

  int razer_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_breath>>(
          'razer_attr_write_mode_breath');
  late final _dart_razer_attr_write_mode_breath _razer_attr_write_mode_breath =
      _razer_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_attr_write_mode_breath>();

  int razer_attr_read_set_logo(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_read_set_logo(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_read_set_logo_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_set_logo>>(
          'razer_attr_read_set_logo');
  late final _dart_razer_attr_read_set_logo _razer_attr_read_set_logo =
      _razer_attr_read_set_logo_ptr
          .asFunction<_dart_razer_attr_read_set_logo>();

  int razer_attr_write_set_logo(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_set_logo(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_set_logo_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_set_logo>>(
          'razer_attr_write_set_logo');
  late final _dart_razer_attr_write_set_logo _razer_attr_write_set_logo =
      _razer_attr_write_set_logo_ptr
          .asFunction<_dart_razer_attr_write_set_logo>();

  int razer_attr_write_mode_custom(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_mode_custom(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_mode_custom_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_mode_custom>>(
          'razer_attr_write_mode_custom');
  late final _dart_razer_attr_write_mode_custom _razer_attr_write_mode_custom =
      _razer_attr_write_mode_custom_ptr
          .asFunction<_dart_razer_attr_write_mode_custom>();

  int razer_attr_write_set_fn_toggle(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_set_fn_toggle(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_set_fn_toggle_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_set_fn_toggle>>(
          'razer_attr_write_set_fn_toggle');
  late final _dart_razer_attr_write_set_fn_toggle
      _razer_attr_write_set_fn_toggle = _razer_attr_write_set_fn_toggle_ptr
          .asFunction<_dart_razer_attr_write_set_fn_toggle>();

  int razer_attr_write_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
    int count,
  ) {
    return _razer_attr_write_set_brightness(
      usb_dev,
      brightness,
      count,
    );
  }

  late final _razer_attr_write_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_set_brightness>>(
          'razer_attr_write_set_brightness');
  late final _dart_razer_attr_write_set_brightness
      _razer_attr_write_set_brightness = _razer_attr_write_set_brightness_ptr
          .asFunction<_dart_razer_attr_write_set_brightness>();

  int razer_attr_read_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_set_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_set_brightness>>(
          'razer_attr_read_set_brightness');
  late final _dart_razer_attr_read_set_brightness
      _razer_attr_read_set_brightness = _razer_attr_read_set_brightness_ptr
          .asFunction<_dart_razer_attr_read_set_brightness>();

  int razer_attr_write_matrix_custom_frame(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_matrix_custom_frame(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_matrix_custom_frame_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_matrix_custom_frame>>(
          'razer_attr_write_matrix_custom_frame');
  late final _dart_razer_attr_write_matrix_custom_frame
      _razer_attr_write_matrix_custom_frame =
      _razer_attr_write_matrix_custom_frame_ptr
          .asFunction<_dart_razer_attr_write_matrix_custom_frame>();

  int razer_attr_write_logo_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_wave>>(
          'razer_attr_write_logo_mode_wave');
  late final _dart_razer_attr_write_logo_mode_wave
      _razer_attr_write_logo_mode_wave = _razer_attr_write_logo_mode_wave_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_wave>();

  int razer_attr_write_scroll_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_wave>>(
          'razer_attr_write_scroll_mode_wave');
  late final _dart_razer_attr_write_scroll_mode_wave
      _razer_attr_write_scroll_mode_wave =
      _razer_attr_write_scroll_mode_wave_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_wave>();

  int razer_attr_write_left_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_wave>>(
          'razer_attr_write_left_mode_wave');
  late final _dart_razer_attr_write_left_mode_wave
      _razer_attr_write_left_mode_wave = _razer_attr_write_left_mode_wave_ptr
          .asFunction<_dart_razer_attr_write_left_mode_wave>();

  int razer_attr_write_right_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_wave>>(
          'razer_attr_write_right_mode_wave');
  late final _dart_razer_attr_write_right_mode_wave
      _razer_attr_write_right_mode_wave = _razer_attr_write_right_mode_wave_ptr
          .asFunction<_dart_razer_attr_write_right_mode_wave>();

  int razer_attr_write_logo_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_static>>(
          'razer_attr_write_logo_mode_static');
  late final _dart_razer_attr_write_logo_mode_static
      _razer_attr_write_logo_mode_static =
      _razer_attr_write_logo_mode_static_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_static>();

  int razer_attr_write_scroll_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_static>>(
          'razer_attr_write_scroll_mode_static');
  late final _dart_razer_attr_write_scroll_mode_static
      _razer_attr_write_scroll_mode_static =
      _razer_attr_write_scroll_mode_static_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_static>();

  int razer_attr_write_left_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_static>>(
          'razer_attr_write_left_mode_static');
  late final _dart_razer_attr_write_left_mode_static
      _razer_attr_write_left_mode_static =
      _razer_attr_write_left_mode_static_ptr
          .asFunction<_dart_razer_attr_write_left_mode_static>();

  int razer_attr_write_right_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_static>>(
          'razer_attr_write_right_mode_static');
  late final _dart_razer_attr_write_right_mode_static
      _razer_attr_write_right_mode_static =
      _razer_attr_write_right_mode_static_ptr
          .asFunction<_dart_razer_attr_write_right_mode_static>();

  int razer_attr_write_logo_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<_c_razer_attr_write_logo_mode_static_no_store>>(
      'razer_attr_write_logo_mode_static_no_store');
  late final _dart_razer_attr_write_logo_mode_static_no_store
      _razer_attr_write_logo_mode_static_no_store =
      _razer_attr_write_logo_mode_static_no_store_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_static_no_store>();

  int razer_attr_write_scroll_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<_c_razer_attr_write_scroll_mode_static_no_store>>(
      'razer_attr_write_scroll_mode_static_no_store');
  late final _dart_razer_attr_write_scroll_mode_static_no_store
      _razer_attr_write_scroll_mode_static_no_store =
      _razer_attr_write_scroll_mode_static_no_store_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_static_no_store>();

  int razer_attr_write_left_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<_c_razer_attr_write_left_mode_static_no_store>>(
      'razer_attr_write_left_mode_static_no_store');
  late final _dart_razer_attr_write_left_mode_static_no_store
      _razer_attr_write_left_mode_static_no_store =
      _razer_attr_write_left_mode_static_no_store_ptr
          .asFunction<_dart_razer_attr_write_left_mode_static_no_store>();

  int razer_attr_write_right_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<_c_razer_attr_write_right_mode_static_no_store>>(
      'razer_attr_write_right_mode_static_no_store');
  late final _dart_razer_attr_write_right_mode_static_no_store
      _razer_attr_write_right_mode_static_no_store =
      _razer_attr_write_right_mode_static_no_store_ptr
          .asFunction<_dart_razer_attr_write_right_mode_static_no_store>();

  int razer_attr_write_logo_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_spectrum>>(
          'razer_attr_write_logo_mode_spectrum');
  late final _dart_razer_attr_write_logo_mode_spectrum
      _razer_attr_write_logo_mode_spectrum =
      _razer_attr_write_logo_mode_spectrum_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_spectrum>();

  int razer_attr_write_scroll_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_spectrum>>(
          'razer_attr_write_scroll_mode_spectrum');
  late final _dart_razer_attr_write_scroll_mode_spectrum
      _razer_attr_write_scroll_mode_spectrum =
      _razer_attr_write_scroll_mode_spectrum_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_spectrum>();

  int razer_attr_write_left_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_spectrum>>(
          'razer_attr_write_left_mode_spectrum');
  late final _dart_razer_attr_write_left_mode_spectrum
      _razer_attr_write_left_mode_spectrum =
      _razer_attr_write_left_mode_spectrum_ptr
          .asFunction<_dart_razer_attr_write_left_mode_spectrum>();

  int razer_attr_write_right_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_spectrum>>(
          'razer_attr_write_right_mode_spectrum');
  late final _dart_razer_attr_write_right_mode_spectrum
      _razer_attr_write_right_mode_spectrum =
      _razer_attr_write_right_mode_spectrum_ptr
          .asFunction<_dart_razer_attr_write_right_mode_spectrum>();

  int razer_attr_write_logo_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_breath>>(
          'razer_attr_write_logo_mode_breath');
  late final _dart_razer_attr_write_logo_mode_breath
      _razer_attr_write_logo_mode_breath =
      _razer_attr_write_logo_mode_breath_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_breath>();

  int razer_attr_write_scroll_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_breath>>(
          'razer_attr_write_scroll_mode_breath');
  late final _dart_razer_attr_write_scroll_mode_breath
      _razer_attr_write_scroll_mode_breath =
      _razer_attr_write_scroll_mode_breath_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_breath>();

  int razer_attr_write_left_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_breath>>(
          'razer_attr_write_left_mode_breath');
  late final _dart_razer_attr_write_left_mode_breath
      _razer_attr_write_left_mode_breath =
      _razer_attr_write_left_mode_breath_ptr
          .asFunction<_dart_razer_attr_write_left_mode_breath>();

  int razer_attr_write_right_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_breath>>(
          'razer_attr_write_right_mode_breath');
  late final _dart_razer_attr_write_right_mode_breath
      _razer_attr_write_right_mode_breath =
      _razer_attr_write_right_mode_breath_ptr
          .asFunction<_dart_razer_attr_write_right_mode_breath>();

  int razer_attr_write_logo_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_none>>(
          'razer_attr_write_logo_mode_none');
  late final _dart_razer_attr_write_logo_mode_none
      _razer_attr_write_logo_mode_none = _razer_attr_write_logo_mode_none_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_none>();

  int razer_attr_write_scroll_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_none>>(
          'razer_attr_write_scroll_mode_none');
  late final _dart_razer_attr_write_scroll_mode_none
      _razer_attr_write_scroll_mode_none =
      _razer_attr_write_scroll_mode_none_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_none>();

  int razer_attr_write_left_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_none>>(
          'razer_attr_write_left_mode_none');
  late final _dart_razer_attr_write_left_mode_none
      _razer_attr_write_left_mode_none = _razer_attr_write_left_mode_none_ptr
          .asFunction<_dart_razer_attr_write_left_mode_none>();

  int razer_attr_write_right_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_none>>(
          'razer_attr_write_right_mode_none');
  late final _dart_razer_attr_write_right_mode_none
      _razer_attr_write_right_mode_none = _razer_attr_write_right_mode_none_ptr
          .asFunction<_dart_razer_attr_write_right_mode_none>();

  int razer_attr_write_logo_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_mode_reactive(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_mode_reactive>>(
          'razer_attr_write_logo_mode_reactive');
  late final _dart_razer_attr_write_logo_mode_reactive
      _razer_attr_write_logo_mode_reactive =
      _razer_attr_write_logo_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_logo_mode_reactive>();

  int razer_attr_write_scroll_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_mode_reactive(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_mode_reactive>>(
          'razer_attr_write_scroll_mode_reactive');
  late final _dart_razer_attr_write_scroll_mode_reactive
      _razer_attr_write_scroll_mode_reactive =
      _razer_attr_write_scroll_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_scroll_mode_reactive>();

  int razer_attr_write_side_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
    int side,
  ) {
    return _razer_attr_write_side_mode_reactive(
      usb_dev,
      buf,
      count,
      side,
    );
  }

  late final _razer_attr_write_side_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_side_mode_reactive>>(
          'razer_attr_write_side_mode_reactive');
  late final _dart_razer_attr_write_side_mode_reactive
      _razer_attr_write_side_mode_reactive =
      _razer_attr_write_side_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_side_mode_reactive>();

  int razer_attr_write_left_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_left_mode_reactive(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_left_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_mode_reactive>>(
          'razer_attr_write_left_mode_reactive');
  late final _dart_razer_attr_write_left_mode_reactive
      _razer_attr_write_left_mode_reactive =
      _razer_attr_write_left_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_left_mode_reactive>();

  int razer_attr_write_right_mode_reactive(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_right_mode_reactive(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_right_mode_reactive_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_mode_reactive>>(
          'razer_attr_write_right_mode_reactive');
  late final _dart_razer_attr_write_right_mode_reactive
      _razer_attr_write_right_mode_reactive =
      _razer_attr_write_right_mode_reactive_ptr
          .asFunction<_dart_razer_attr_write_right_mode_reactive>();

  int razer_attr_read_dpi(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_dpi(
      usb_dev,
    );
  }

  late final _razer_attr_read_dpi_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_dpi>>(
          'razer_attr_read_dpi');
  late final _dart_razer_attr_read_dpi _razer_attr_read_dpi =
      _razer_attr_read_dpi_ptr.asFunction<_dart_razer_attr_read_dpi>();

  void razer_attr_write_dpi(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int dpi_x,
    int dpi_y,
  ) {
    return _razer_attr_write_dpi(
      usb_dev,
      dpi_x,
      dpi_y,
    );
  }

  late final _razer_attr_write_dpi_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_dpi>>(
          'razer_attr_write_dpi');
  late final _dart_razer_attr_write_dpi _razer_attr_write_dpi =
      _razer_attr_write_dpi_ptr.asFunction<_dart_razer_attr_write_dpi>();

  int razer_attr_read_poll_rate(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_poll_rate(
      usb_dev,
    );
  }

  late final _razer_attr_read_poll_rate_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_poll_rate>>(
          'razer_attr_read_poll_rate');
  late final _dart_razer_attr_read_poll_rate _razer_attr_read_poll_rate =
      _razer_attr_read_poll_rate_ptr
          .asFunction<_dart_razer_attr_read_poll_rate>();

  void razer_attr_write_poll_rate(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int polling_rate,
  ) {
    return _razer_attr_write_poll_rate(
      usb_dev,
      polling_rate,
    );
  }

  late final _razer_attr_write_poll_rate_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_poll_rate>>(
          'razer_attr_write_poll_rate');
  late final _dart_razer_attr_write_poll_rate _razer_attr_write_poll_rate =
      _razer_attr_write_poll_rate_ptr
          .asFunction<_dart_razer_attr_write_poll_rate>();

  int razer_attr_read_matrix_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_matrix_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_matrix_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_matrix_brightness>>(
          'razer_attr_read_matrix_brightness');
  late final _dart_razer_attr_read_matrix_brightness
      _razer_attr_read_matrix_brightness =
      _razer_attr_read_matrix_brightness_ptr
          .asFunction<_dart_razer_attr_read_matrix_brightness>();

  void razer_attr_write_matrix_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
  ) {
    return _razer_attr_write_matrix_brightness(
      usb_dev,
      brightness,
    );
  }

  late final _razer_attr_write_matrix_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_matrix_brightness>>(
          'razer_attr_write_matrix_brightness');
  late final _dart_razer_attr_write_matrix_brightness
      _razer_attr_write_matrix_brightness =
      _razer_attr_write_matrix_brightness_ptr
          .asFunction<_dart_razer_attr_write_matrix_brightness>();

  int razer_attr_read_scroll_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_scroll_led_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_scroll_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_scroll_led_brightness>>(
          'razer_attr_read_scroll_led_brightness');
  late final _dart_razer_attr_read_scroll_led_brightness
      _razer_attr_read_scroll_led_brightness =
      _razer_attr_read_scroll_led_brightness_ptr
          .asFunction<_dart_razer_attr_read_scroll_led_brightness>();

  void razer_attr_write_scroll_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
  ) {
    return _razer_attr_write_scroll_led_brightness(
      usb_dev,
      brightness,
    );
  }

  late final _razer_attr_write_scroll_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_led_brightness>>(
          'razer_attr_write_scroll_led_brightness');
  late final _dart_razer_attr_write_scroll_led_brightness
      _razer_attr_write_scroll_led_brightness =
      _razer_attr_write_scroll_led_brightness_ptr
          .asFunction<_dart_razer_attr_write_scroll_led_brightness>();

  int razer_attr_read_logo_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_logo_led_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_logo_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_logo_led_brightness>>(
          'razer_attr_read_logo_led_brightness');
  late final _dart_razer_attr_read_logo_led_brightness
      _razer_attr_read_logo_led_brightness =
      _razer_attr_read_logo_led_brightness_ptr
          .asFunction<_dart_razer_attr_read_logo_led_brightness>();

  void razer_attr_write_logo_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
  ) {
    return _razer_attr_write_logo_led_brightness(
      usb_dev,
      brightness,
    );
  }

  late final _razer_attr_write_logo_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_led_brightness>>(
          'razer_attr_write_logo_led_brightness');
  late final _dart_razer_attr_write_logo_led_brightness
      _razer_attr_write_logo_led_brightness =
      _razer_attr_write_logo_led_brightness_ptr
          .asFunction<_dart_razer_attr_write_logo_led_brightness>();

  int razer_attr_read_left_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_left_led_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_left_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_left_led_brightness>>(
          'razer_attr_read_left_led_brightness');
  late final _dart_razer_attr_read_left_led_brightness
      _razer_attr_read_left_led_brightness =
      _razer_attr_read_left_led_brightness_ptr
          .asFunction<_dart_razer_attr_read_left_led_brightness>();

  void razer_attr_write_left_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
  ) {
    return _razer_attr_write_left_led_brightness(
      usb_dev,
      brightness,
    );
  }

  late final _razer_attr_write_left_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_left_led_brightness>>(
          'razer_attr_write_left_led_brightness');
  late final _dart_razer_attr_write_left_led_brightness
      _razer_attr_write_left_led_brightness =
      _razer_attr_write_left_led_brightness_ptr
          .asFunction<_dart_razer_attr_write_left_led_brightness>();

  int razer_attr_read_right_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_attr_read_right_led_brightness(
      usb_dev,
    );
  }

  late final _razer_attr_read_right_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_right_led_brightness>>(
          'razer_attr_read_right_led_brightness');
  late final _dart_razer_attr_read_right_led_brightness
      _razer_attr_read_right_led_brightness =
      _razer_attr_read_right_led_brightness_ptr
          .asFunction<_dart_razer_attr_read_right_led_brightness>();

  void razer_attr_write_right_led_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
  ) {
    return _razer_attr_write_right_led_brightness(
      usb_dev,
      brightness,
    );
  }

  late final _razer_attr_write_right_led_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_right_led_brightness>>(
          'razer_attr_write_right_led_brightness');
  late final _dart_razer_attr_write_right_led_brightness
      _razer_attr_write_right_led_brightness =
      _razer_attr_write_right_led_brightness_ptr
          .asFunction<_dart_razer_attr_write_right_led_brightness>();

  int razer_attr_write_logo_led_effect(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_led_effect(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_led_effect_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_led_effect>>(
          'razer_attr_write_logo_led_effect');
  late final _dart_razer_attr_write_logo_led_effect
      _razer_attr_write_logo_led_effect = _razer_attr_write_logo_led_effect_ptr
          .asFunction<_dart_razer_attr_write_logo_led_effect>();

  int razer_attr_write_scroll_led_effect(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_scroll_led_effect(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_scroll_led_effect_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_scroll_led_effect>>(
          'razer_attr_write_scroll_led_effect');
  late final _dart_razer_attr_write_scroll_led_effect
      _razer_attr_write_scroll_led_effect =
      _razer_attr_write_scroll_led_effect_ptr
          .asFunction<_dart_razer_attr_write_scroll_led_effect>();

  int razer_attr_write_logo_led_rgb(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_attr_write_logo_led_rgb(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_attr_write_logo_led_rgb_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_write_logo_led_rgb>>(
          'razer_attr_write_logo_led_rgb');
  late final _dart_razer_attr_write_logo_led_rgb
      _razer_attr_write_logo_led_rgb = _razer_attr_write_logo_led_rgb_ptr
          .asFunction<_dart_razer_attr_write_logo_led_rgb>();

  int razer_attr_read_get_battery(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_get_battery(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_get_battery_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_get_battery>>(
          'razer_attr_read_get_battery');
  late final _dart_razer_attr_read_get_battery _razer_attr_read_get_battery =
      _razer_attr_read_get_battery_ptr
          .asFunction<_dart_razer_attr_read_get_battery>();

  int razer_attr_read_is_charging(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
  ) {
    return _razer_attr_read_is_charging(
      usb_dev,
      buf,
    );
  }

  late final _razer_attr_read_is_charging_ptr =
      _lookup<ffi.NativeFunction<_c_razer_attr_read_is_charging>>(
          'razer_attr_read_is_charging');
  late final _dart_razer_attr_read_is_charging _razer_attr_read_is_charging =
      _razer_attr_read_is_charging_ptr
          .asFunction<_dart_razer_attr_read_is_charging>();

  int razer_mouse_dock_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_dock_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_dock_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_dock_attr_write_mode_static>>(
          'razer_mouse_dock_attr_write_mode_static');
  late final _dart_razer_mouse_dock_attr_write_mode_static
      _razer_mouse_dock_attr_write_mode_static =
      _razer_mouse_dock_attr_write_mode_static_ptr
          .asFunction<_dart_razer_mouse_dock_attr_write_mode_static>();

  int razer_mouse_dock_attr_write_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_dock_attr_write_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_dock_attr_write_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<
              _c_razer_mouse_dock_attr_write_mode_static_no_store>>(
      'razer_mouse_dock_attr_write_mode_static_no_store');
  late final _dart_razer_mouse_dock_attr_write_mode_static_no_store
      _razer_mouse_dock_attr_write_mode_static_no_store =
      _razer_mouse_dock_attr_write_mode_static_no_store_ptr
          .asFunction<_dart_razer_mouse_dock_attr_write_mode_static_no_store>();

  int razer_mouse_dock_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_dock_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_dock_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_dock_attr_write_mode_spectrum>>(
          'razer_mouse_dock_attr_write_mode_spectrum');
  late final _dart_razer_mouse_dock_attr_write_mode_spectrum
      _razer_mouse_dock_attr_write_mode_spectrum =
      _razer_mouse_dock_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_mouse_dock_attr_write_mode_spectrum>();

  int razer_mouse_dock_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_dock_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_dock_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_dock_attr_write_mode_breath>>(
          'razer_mouse_dock_attr_write_mode_breath');
  late final _dart_razer_mouse_dock_attr_write_mode_breath
      _razer_mouse_dock_attr_write_mode_breath =
      _razer_mouse_dock_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_mouse_dock_attr_write_mode_breath>();

  int razer_mouse_dock_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_dock_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_dock_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_dock_attr_write_mode_none>>(
          'razer_mouse_dock_attr_write_mode_none');
  late final _dart_razer_mouse_dock_attr_write_mode_none
      _razer_mouse_dock_attr_write_mode_none =
      _razer_mouse_dock_attr_write_mode_none_ptr
          .asFunction<_dart_razer_mouse_dock_attr_write_mode_none>();

  int razer_mouse_mat_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_mode_none>>(
          'razer_mouse_mat_attr_write_mode_none');
  late final _dart_razer_mouse_mat_attr_write_mode_none
      _razer_mouse_mat_attr_write_mode_none =
      _razer_mouse_mat_attr_write_mode_none_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_none>();

  int razer_mouse_mat_attr_write_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_mode_wave>>(
          'razer_mouse_mat_attr_write_mode_wave');
  late final _dart_razer_mouse_mat_attr_write_mode_wave
      _razer_mouse_mat_attr_write_mode_wave =
      _razer_mouse_mat_attr_write_mode_wave_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_wave>();

  int razer_mouse_mat_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_mode_breath>>(
          'razer_mouse_mat_attr_write_mode_breath');
  late final _dart_razer_mouse_mat_attr_write_mode_breath
      _razer_mouse_mat_attr_write_mode_breath =
      _razer_mouse_mat_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_breath>();

  int razer_mouse_mat_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_mode_static>>(
          'razer_mouse_mat_attr_write_mode_static');
  late final _dart_razer_mouse_mat_attr_write_mode_static
      _razer_mouse_mat_attr_write_mode_static =
      _razer_mouse_mat_attr_write_mode_static_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_static>();

  int razer_mouse_mat_attr_write_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<
              _c_razer_mouse_mat_attr_write_mode_static_no_store>>(
      'razer_mouse_mat_attr_write_mode_static_no_store');
  late final _dart_razer_mouse_mat_attr_write_mode_static_no_store
      _razer_mouse_mat_attr_write_mode_static_no_store =
      _razer_mouse_mat_attr_write_mode_static_no_store_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_static_no_store>();

  int razer_mouse_mat_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_mode_spectrum>>(
          'razer_mouse_mat_attr_write_mode_spectrum');
  late final _dart_razer_mouse_mat_attr_write_mode_spectrum
      _razer_mouse_mat_attr_write_mode_spectrum =
      _razer_mouse_mat_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_mode_spectrum>();

  int razer_mouse_mat_attr_write_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
    int count,
  ) {
    return _razer_mouse_mat_attr_write_set_brightness(
      usb_dev,
      brightness,
      count,
    );
  }

  late final _razer_mouse_mat_attr_write_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_write_set_brightness>>(
          'razer_mouse_mat_attr_write_set_brightness');
  late final _dart_razer_mouse_mat_attr_write_set_brightness
      _razer_mouse_mat_attr_write_set_brightness =
      _razer_mouse_mat_attr_write_set_brightness_ptr
          .asFunction<_dart_razer_mouse_mat_attr_write_set_brightness>();

  int razer_mouse_mat_attr_read_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_mouse_mat_attr_read_set_brightness(
      usb_dev,
    );
  }

  late final _razer_mouse_mat_attr_read_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_mouse_mat_attr_read_set_brightness>>(
          'razer_mouse_mat_attr_read_set_brightness');
  late final _dart_razer_mouse_mat_attr_read_set_brightness
      _razer_mouse_mat_attr_read_set_brightness =
      _razer_mouse_mat_attr_read_set_brightness_ptr
          .asFunction<_dart_razer_mouse_mat_attr_read_set_brightness>();

  int razer_headphone_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_headphone_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_headphone_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_headphone_attr_write_mode_none>>(
          'razer_headphone_attr_write_mode_none');
  late final _dart_razer_headphone_attr_write_mode_none
      _razer_headphone_attr_write_mode_none =
      _razer_headphone_attr_write_mode_none_ptr
          .asFunction<_dart_razer_headphone_attr_write_mode_none>();

  int razer_headphone_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_headphone_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_headphone_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_headphone_attr_write_mode_breath>>(
          'razer_headphone_attr_write_mode_breath');
  late final _dart_razer_headphone_attr_write_mode_breath
      _razer_headphone_attr_write_mode_breath =
      _razer_headphone_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_headphone_attr_write_mode_breath>();

  int razer_headphone_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_headphone_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_headphone_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_headphone_attr_write_mode_static>>(
          'razer_headphone_attr_write_mode_static');
  late final _dart_razer_headphone_attr_write_mode_static
      _razer_headphone_attr_write_mode_static =
      _razer_headphone_attr_write_mode_static_ptr
          .asFunction<_dart_razer_headphone_attr_write_mode_static>();

  int razer_headphone_attr_write_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_headphone_attr_write_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_headphone_attr_write_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<
              _c_razer_headphone_attr_write_mode_static_no_store>>(
      'razer_headphone_attr_write_mode_static_no_store');
  late final _dart_razer_headphone_attr_write_mode_static_no_store
      _razer_headphone_attr_write_mode_static_no_store =
      _razer_headphone_attr_write_mode_static_no_store_ptr
          .asFunction<_dart_razer_headphone_attr_write_mode_static_no_store>();

  int razer_headphone_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_headphone_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_headphone_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_headphone_attr_write_mode_spectrum>>(
          'razer_headphone_attr_write_mode_spectrum');
  late final _dart_razer_headphone_attr_write_mode_spectrum
      _razer_headphone_attr_write_mode_spectrum =
      _razer_headphone_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_headphone_attr_write_mode_spectrum>();

  int razer_egpu_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_egpu_attr_write_mode_none>>(
          'razer_egpu_attr_write_mode_none');
  late final _dart_razer_egpu_attr_write_mode_none
      _razer_egpu_attr_write_mode_none = _razer_egpu_attr_write_mode_none_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_none>();

  int razer_egpu_attr_write_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_wave(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_egpu_attr_write_mode_wave>>(
          'razer_egpu_attr_write_mode_wave');
  late final _dart_razer_egpu_attr_write_mode_wave
      _razer_egpu_attr_write_mode_wave = _razer_egpu_attr_write_mode_wave_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_wave>();

  int razer_egpu_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_egpu_attr_write_mode_breath>>(
          'razer_egpu_attr_write_mode_breath');
  late final _dart_razer_egpu_attr_write_mode_breath
      _razer_egpu_attr_write_mode_breath =
      _razer_egpu_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_breath>();

  int razer_egpu_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_egpu_attr_write_mode_static>>(
          'razer_egpu_attr_write_mode_static');
  late final _dart_razer_egpu_attr_write_mode_static
      _razer_egpu_attr_write_mode_static =
      _razer_egpu_attr_write_mode_static_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_static>();

  int razer_egpu_attr_write_mode_static_no_store(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_static_no_store(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_static_no_store_ptr = _lookup<
          ffi.NativeFunction<_c_razer_egpu_attr_write_mode_static_no_store>>(
      'razer_egpu_attr_write_mode_static_no_store');
  late final _dart_razer_egpu_attr_write_mode_static_no_store
      _razer_egpu_attr_write_mode_static_no_store =
      _razer_egpu_attr_write_mode_static_no_store_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_static_no_store>();

  int razer_egpu_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_egpu_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_egpu_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_egpu_attr_write_mode_spectrum>>(
          'razer_egpu_attr_write_mode_spectrum');
  late final _dart_razer_egpu_attr_write_mode_spectrum
      _razer_egpu_attr_write_mode_spectrum =
      _razer_egpu_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_egpu_attr_write_mode_spectrum>();

  int razer_kraken_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_kraken_attr_write_mode_none(
      dev,
      buf,
      count,
    );
  }

  late final _razer_kraken_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_kraken_attr_write_mode_none>>(
          'razer_kraken_attr_write_mode_none');
  late final _dart_razer_kraken_attr_write_mode_none
      _razer_kraken_attr_write_mode_none =
      _razer_kraken_attr_write_mode_none_ptr
          .asFunction<_dart_razer_kraken_attr_write_mode_none>();

  int razer_kraken_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_kraken_attr_write_mode_static(
      dev,
      buf,
      count,
    );
  }

  late final _razer_kraken_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_kraken_attr_write_mode_static>>(
          'razer_kraken_attr_write_mode_static');
  late final _dart_razer_kraken_attr_write_mode_static
      _razer_kraken_attr_write_mode_static =
      _razer_kraken_attr_write_mode_static_ptr
          .asFunction<_dart_razer_kraken_attr_write_mode_static>();

  int razer_kraken_attr_write_mode_custom(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_kraken_attr_write_mode_custom(
      dev,
      buf,
      count,
    );
  }

  late final _razer_kraken_attr_write_mode_custom_ptr =
      _lookup<ffi.NativeFunction<_c_razer_kraken_attr_write_mode_custom>>(
          'razer_kraken_attr_write_mode_custom');
  late final _dart_razer_kraken_attr_write_mode_custom
      _razer_kraken_attr_write_mode_custom =
      _razer_kraken_attr_write_mode_custom_ptr
          .asFunction<_dart_razer_kraken_attr_write_mode_custom>();

  int razer_kraken_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_kraken_attr_write_mode_breath(
      dev,
      buf,
      count,
    );
  }

  late final _razer_kraken_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_kraken_attr_write_mode_breath>>(
          'razer_kraken_attr_write_mode_breath');
  late final _dart_razer_kraken_attr_write_mode_breath
      _razer_kraken_attr_write_mode_breath =
      _razer_kraken_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_kraken_attr_write_mode_breath>();

  int razer_kraken_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_kraken_attr_write_mode_spectrum(
      dev,
      buf,
      count,
    );
  }

  late final _razer_kraken_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_kraken_attr_write_mode_spectrum>>(
          'razer_kraken_attr_write_mode_spectrum');
  late final _dart_razer_kraken_attr_write_mode_spectrum
      _razer_kraken_attr_write_mode_spectrum =
      _razer_kraken_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_kraken_attr_write_mode_spectrum>();

  int razer_accessory_attr_write_mode_none(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_accessory_attr_write_mode_none(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_accessory_attr_write_mode_none_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_mode_none>>(
          'razer_accessory_attr_write_mode_none');
  late final _dart_razer_accessory_attr_write_mode_none
      _razer_accessory_attr_write_mode_none =
      _razer_accessory_attr_write_mode_none_ptr
          .asFunction<_dart_razer_accessory_attr_write_mode_none>();

  int razer_accessory_attr_write_mode_spectrum(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_accessory_attr_write_mode_spectrum(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_accessory_attr_write_mode_spectrum_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_mode_spectrum>>(
          'razer_accessory_attr_write_mode_spectrum');
  late final _dart_razer_accessory_attr_write_mode_spectrum
      _razer_accessory_attr_write_mode_spectrum =
      _razer_accessory_attr_write_mode_spectrum_ptr
          .asFunction<_dart_razer_accessory_attr_write_mode_spectrum>();

  int razer_accessory_attr_write_mode_wave(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
    int speed,
  ) {
    return _razer_accessory_attr_write_mode_wave(
      usb_dev,
      buf,
      count,
      speed,
    );
  }

  late final _razer_accessory_attr_write_mode_wave_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_mode_wave>>(
          'razer_accessory_attr_write_mode_wave');
  late final _dart_razer_accessory_attr_write_mode_wave
      _razer_accessory_attr_write_mode_wave =
      _razer_accessory_attr_write_mode_wave_ptr
          .asFunction<_dart_razer_accessory_attr_write_mode_wave>();

  int razer_accessory_attr_write_mode_static(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_accessory_attr_write_mode_static(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_accessory_attr_write_mode_static_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_mode_static>>(
          'razer_accessory_attr_write_mode_static');
  late final _dart_razer_accessory_attr_write_mode_static
      _razer_accessory_attr_write_mode_static =
      _razer_accessory_attr_write_mode_static_ptr
          .asFunction<_dart_razer_accessory_attr_write_mode_static>();

  int razer_accessory_attr_write_mode_breath(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    ffi.Pointer<ffi.Int8> buf,
    int count,
  ) {
    return _razer_accessory_attr_write_mode_breath(
      usb_dev,
      buf,
      count,
    );
  }

  late final _razer_accessory_attr_write_mode_breath_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_mode_breath>>(
          'razer_accessory_attr_write_mode_breath');
  late final _dart_razer_accessory_attr_write_mode_breath
      _razer_accessory_attr_write_mode_breath =
      _razer_accessory_attr_write_mode_breath_ptr
          .asFunction<_dart_razer_accessory_attr_write_mode_breath>();

  int razer_accessory_attr_read_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ) {
    return _razer_accessory_attr_read_set_brightness(
      usb_dev,
    );
  }

  late final _razer_accessory_attr_read_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_read_set_brightness>>(
          'razer_accessory_attr_read_set_brightness');
  late final _dart_razer_accessory_attr_read_set_brightness
      _razer_accessory_attr_read_set_brightness =
      _razer_accessory_attr_read_set_brightness_ptr
          .asFunction<_dart_razer_accessory_attr_read_set_brightness>();

  int razer_accessory_attr_write_set_brightness(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
    int brightness,
    int count,
  ) {
    return _razer_accessory_attr_write_set_brightness(
      usb_dev,
      brightness,
      count,
    );
  }

  late final _razer_accessory_attr_write_set_brightness_ptr =
      _lookup<ffi.NativeFunction<_c_razer_accessory_attr_write_set_brightness>>(
          'razer_accessory_attr_write_set_brightness');
  late final _dart_razer_accessory_attr_write_set_brightness
      _razer_accessory_attr_write_set_brightness =
      _razer_accessory_attr_write_set_brightness_ptr
          .asFunction<_dart_razer_accessory_attr_write_set_brightness>();

  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> getRazerUSBDeviceInterface(
    int type,
  ) {
    return _getRazerUSBDeviceInterface(
      type,
    );
  }

  late final _getRazerUSBDeviceInterface_ptr =
      _lookup<ffi.NativeFunction<_c_getRazerUSBDeviceInterface>>(
          'getRazerUSBDeviceInterface');
  late final _dart_getRazerUSBDeviceInterface _getRazerUSBDeviceInterface =
      _getRazerUSBDeviceInterface_ptr
          .asFunction<_dart_getRazerUSBDeviceInterface>();

  void closeRazerUSBDeviceInterface(
    ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ) {
    return _closeRazerUSBDeviceInterface(
      dev,
    );
  }

  late final _closeRazerUSBDeviceInterface_ptr =
      _lookup<ffi.NativeFunction<_c_closeRazerUSBDeviceInterface>>(
          'closeRazerUSBDeviceInterface');
  late final _dart_closeRazerUSBDeviceInterface _closeRazerUSBDeviceInterface =
      _closeRazerUSBDeviceInterface_ptr
          .asFunction<_dart_closeRazerUSBDeviceInterface>();

  RazerDevices getAllRazerDevices() {
    return _getAllRazerDevices();
  }

  late final _getAllRazerDevices_ptr =
      _lookup<ffi.NativeFunction<_c_getAllRazerDevices>>('getAllRazerDevices');
  late final _dart_getAllRazerDevices _getAllRazerDevices =
      _getAllRazerDevices_ptr.asFunction<_dart_getAllRazerDevices>();

  void closeAllRazerDevices(
    RazerDevices devices,
  ) {
    return _closeAllRazerDevices(
      devices,
    );
  }

  late final _closeAllRazerDevices_ptr =
      _lookup<ffi.NativeFunction<_c_closeAllRazerDevices>>(
          'closeAllRazerDevices');
  late final _dart_closeAllRazerDevices _closeAllRazerDevices =
      _closeAllRazerDevices_ptr.asFunction<_dart_closeAllRazerDevices>();
}

class razer_rgb extends ffi.Struct {
  @ffi.Uint8()
  external int r;

  @ffi.Uint8()
  external int g;

  @ffi.Uint8()
  external int b;
}

class razer_report extends ffi.Opaque {}

class REFIID extends ffi.Struct {
  @ffi.Uint8()
  external int byte0;

  @ffi.Uint8()
  external int byte1;

  @ffi.Uint8()
  external int byte2;

  @ffi.Uint8()
  external int byte3;

  @ffi.Uint8()
  external int byte4;

  @ffi.Uint8()
  external int byte5;

  @ffi.Uint8()
  external int byte6;

  @ffi.Uint8()
  external int byte7;

  @ffi.Uint8()
  external int byte8;

  @ffi.Uint8()
  external int byte9;

  @ffi.Uint8()
  external int byte10;

  @ffi.Uint8()
  external int byte11;

  @ffi.Uint8()
  external int byte12;

  @ffi.Uint8()
  external int byte13;

  @ffi.Uint8()
  external int byte14;

  @ffi.Uint8()
  external int byte15;
}

class CFRunLoopSourceRef extends ffi.Opaque {}

@ffi.Packed(1)
class IOUSBConfigurationDescriptorPtr extends ffi.Struct {
  @ffi.Uint8()
  external int bLength;

  @ffi.Uint8()
  external int bDescriptorType;

  @ffi.Uint16()
  external int wTotalLength;

  @ffi.Uint8()
  external int bNumInterfaces;

  @ffi.Uint8()
  external int bConfigurationValue;

  @ffi.Uint8()
  external int iConfiguration;

  @ffi.Uint8()
  external int bmAttributes;

  @ffi.Uint8()
  external int MaxPower;
}

@ffi.Packed(2)
class AbsoluteTime extends ffi.Struct {
  @ffi.Uint32()
  external int lo;

  @ffi.Uint32()
  external int hi;
}

class IOUSBDevRequest extends ffi.Struct {
  @ffi.Uint8()
  external int bmRequestType;

  @ffi.Uint8()
  external int bRequest;

  @ffi.Uint16()
  external int wValue;

  @ffi.Uint16()
  external int wIndex;

  @ffi.Uint16()
  external int wLength;

  external ffi.Pointer<ffi.Void> pData;

  @ffi.Uint32()
  external int wLenDone;
}

class IOUSBFindInterfaceRequest extends ffi.Struct {
  @ffi.Uint16()
  external int bInterfaceClass;

  @ffi.Uint16()
  external int bInterfaceSubClass;

  @ffi.Uint16()
  external int bInterfaceProtocol;

  @ffi.Uint16()
  external int bAlternateSetting;
}

class IOUSBDevRequestTO extends ffi.Struct {
  @ffi.Uint8()
  external int bmRequestType;

  @ffi.Uint8()
  external int bRequest;

  @ffi.Uint16()
  external int wValue;

  @ffi.Uint16()
  external int wIndex;

  @ffi.Uint16()
  external int wLength;

  external ffi.Pointer<ffi.Void> pData;

  @ffi.Uint32()
  external int wLenDone;

  @ffi.Uint32()
  external int noDataTimeout;

  @ffi.Uint32()
  external int completionTimeout;
}

class NumVersion extends ffi.Struct {
  @ffi.Uint8()
  external int nonRelRev;

  @ffi.Uint8()
  external int stage;

  @ffi.Uint8()
  external int minorAndBugRev;

  @ffi.Uint8()
  external int majorRev;
}

class IONotificationPortRef extends ffi.Opaque {}

class IOUSBDeviceInterface extends ffi.Struct {
  external ffi.Pointer<ffi.Void> _reserved;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_1>> QueryInterface;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_2>> AddRef;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_3>> Release;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_4>>
      CreateDeviceAsyncEventSource;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_5>>
      GetDeviceAsyncEventSource;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_6>> CreateDeviceAsyncPort;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_7>> GetDeviceAsyncPort;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_8>> USBDeviceOpen;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_9>> USBDeviceClose;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_10>> GetDeviceClass;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_11>> GetDeviceSubClass;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_12>> GetDeviceProtocol;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_13>> GetDeviceVendor;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_14>> GetDeviceProduct;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_15>> GetDeviceReleaseNumber;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_16>> GetDeviceAddress;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_17>>
      GetDeviceBusPowerAvailable;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_18>> GetDeviceSpeed;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_19>>
      GetNumberOfConfigurations;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_20>> GetLocationID;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_21>>
      GetConfigurationDescriptorPtr;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_22>> GetConfiguration;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_23>> SetConfiguration;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_24>> GetBusFrameNumber;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_25>> ResetDevice;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_26>> DeviceRequest;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_27>> DeviceRequestAsync;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_28>>
      CreateInterfaceIterator;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_29>> USBDeviceOpenSeize;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_30>> DeviceRequestTO;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_31>> DeviceRequestAsyncTO;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_32>> USBDeviceSuspend;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_33>> USBDeviceAbortPipeZero;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_34>>
      USBGetManufacturerStringIndex;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_35>>
      USBGetProductStringIndex;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_36>>
      USBGetSerialNumberStringIndex;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_37>> USBDeviceReEnumerate;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_38>> GetBusMicroFrameNumber;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_39>> GetIOUSBLibVersion;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_40>>
      GetBusFrameNumberWithTime;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_41>>
      GetUSBDeviceInformation;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_42>> RequestExtraPower;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_43>> ReturnExtraPower;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_44>> GetExtraPowerAllocated;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_45>>
      GetBandwidthAvailableForDevice;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_46>> SetConfigurationV2;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_47>>
      RegisterForNotification;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_48>> UnregisterNotification;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_49>>
      AcknowledgeNotification;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_50>>
      GetDeviceAsyncNotificationPort;
}

class DeathAdder3_5g extends ffi.Struct {
  @ffi.Uint8()
  external int poll;

  @ffi.Uint8()
  external int dpi;

  @ffi.Uint8()
  external int profile;

  @ffi.Uint8()
  external int leds;
}

class usb_device extends ffi.Opaque {}

class hid_device extends ffi.Opaque {}

class razer_mousemat_device extends ffi.Struct {
  external ffi.Pointer<usb_device> usbdev;

  external ffi.Pointer<hid_device> hiddev;

  @ffi.Uint8()
  external int effect;

  @ffi.Array.multi([128])
  external ffi.Array<ffi.Int8> name;

  @ffi.Array.multi([64])
  external ffi.Array<ffi.Int8> phys;
}

class razer_headphone_device extends ffi.Struct {
  external ffi.Pointer<usb_device> usbdev;

  external ffi.Pointer<hid_device> hiddev;

  @ffi.Uint8()
  external int effect;

  @ffi.Array.multi([128])
  external ffi.Array<ffi.Int8> name;

  @ffi.Array.multi([64])
  external ffi.Array<ffi.Int8> phys;
}

class razer_kraken_device extends ffi.Struct {
  @ffi.Uint8()
  external int usb_interface_protocol;

  @ffi.Uint16()
  external int usb_pid;

  @ffi.Uint16()
  external int usb_vid;

  @ffi.Uint16()
  external int led_mode_address;

  @ffi.Uint16()
  external int custom_address;

  @ffi.Array.multi([3])
  external ffi.Array<ffi.Uint16> breathing_address;

  @ffi.Array.multi([23])
  external ffi.Array<ffi.Int8> serial;

  @ffi.Array.multi([3])
  external ffi.Array<ffi.Uint8> firmware_version;

  @ffi.Array.multi([33])
  external ffi.Array<ffi.Int8> data;
}

class razer_kraken_request_report extends ffi.Struct {
  @ffi.Uint8()
  external int report_id;

  @ffi.Uint8()
  external int destination;

  @ffi.Uint8()
  external int length;

  @ffi.Uint8()
  external int addr_h;

  @ffi.Uint8()
  external int addr_l;

  @ffi.Array.multi([32])
  external ffi.Array<ffi.Uint8> arguments;
}

class razer_kraken_response_report extends ffi.Struct {
  @ffi.Uint8()
  external int report_id;

  @ffi.Array.multi([36])
  external ffi.Array<ffi.Uint8> arguments;
}

class RazerDevice extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usbDevice;

  @ffi.Uint16()
  external int productId;

  @ffi.Int32()
  external int internalDeviceId;
}

class RazerDevices extends ffi.Struct {
  external ffi.Pointer<RazerDevice> devices;

  @ffi.Int32()
  external int size;
}

const int HID_REQ_GET_REPORT = 1;

const int HID_REQ_SET_REPORT = 9;

const int USB_TYPE_CLASS = 32;

const int USB_RECIP_INTERFACE = 1;

const int USB_DIR_OUT = 0;

const int USB_DIR_IN = 128;

const int RAZER_USB_REPORT_LEN = 90;

const int OFF = 0;

const int ON = 1;

const int ZERO_LED = 0;

const int SCROLL_WHEEL_LED = 1;

const int BATTERY_LED = 3;

const int LOGO_LED = 4;

const int BACKLIGHT_LED = 5;

const int MACRO_LED = 7;

const int GAME_LED = 8;

const int RED_PROFILE_LED = 12;

const int GREEN_PROFILE_LED = 13;

const int BLUE_PROFILE_LED = 14;

const int RIGHT_SIDE_LED = 16;

const int LEFT_SIDE_LED = 17;

const int NOSTORE = 0;

const int VARSTORE = 1;

const int LED_STATIC = 0;

const int LED_BLINKING = 1;

const int LED_PULSATING = 2;

const int LED_SPECTRUM_CYCLING = 4;

const int RAZER_CMD_BUSY = 1;

const int RAZER_CMD_SUCCESSFUL = 2;

const int RAZER_CMD_FAILURE = 3;

const int RAZER_CMD_TIMEOUT = 4;

const int RAZER_CMD_NOT_SUPPORTED = 5;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_ULTIMATE_2012 = 269;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_STEALTH_EDITION = 270;

const int USB_DEVICE_ID_RAZER_ANANSI = 271;

const int USB_DEVICE_ID_RAZER_NOSTROMO = 273;

const int USB_DEVICE_ID_RAZER_ORBWEAVER = 275;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_ULTIMATE_2013 = 282;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_STEALTH = 283;

const int USB_DEVICE_ID_RAZER_TARTARUS = 513;

const int USB_DEVICE_ID_RAZER_DEATHSTALKER_EXPERT = 514;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_CHROMA = 515;

const int USB_DEVICE_ID_RAZER_DEATHSTALKER_CHROMA = 516;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH = 517;

const int USB_DEVICE_ID_RAZER_ORBWEAVER_CHROMA = 519;

const int USB_DEVICE_ID_RAZER_TARTARUS_CHROMA = 520;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_CHROMA_TE = 521;

const int USB_DEVICE_ID_RAZER_BLADE_QHD = 527;

const int USB_DEVICE_ID_RAZER_BLADE_PRO_LATE_2016 = 528;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_OVERWATCH = 529;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_ULTIMATE_2016 = 532;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_X_CHROMA = 534;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_X_ULTIMATE = 535;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_X_CHROMA_TE = 538;

const int USB_DEVICE_ID_RAZER_ORNATA_CHROMA = 542;

const int USB_DEVICE_ID_RAZER_ORNATA = 543;

const int USB_DEVICE_ID_RAZER_ORNATA_CHROMA_V2 = 605;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH_LATE_2016 = 544;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_CHROMA_V2 = 545;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_V3 = 590;

const int USB_DEVICE_ID_RAZER_BLADE_LATE_2016 = 548;

const int USB_DEVICE_ID_RAZER_BLADE_PRO_2017 = 549;

const int USB_DEVICE_ID_RAZER_HUNTSMAN_ELITE = 550;

const int USB_DEVICE_ID_RAZER_HUNTSMAN = 551;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_ELITE = 552;

const int USB_DEVICE_ID_RAZER_CYNOSA_CHROMA = 554;

const int USB_DEVICE_ID_RAZER_TARTARUS_V2 = 555;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH_MID_2017 = 557;

const int USB_DEVICE_ID_RAZER_BLADE_PRO_2017_FULLHD = 559;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH_LATE_2017 = 562;

const int USB_DEVICE_ID_RAZER_BLADE_2018 = 563;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_LITE = 565;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_ESSENTIAL = 567;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH_2019 = 569;

const int USB_DEVICE_ID_RAZER_BLADE_2019_ADV = 570;

const int USB_DEVICE_ID_RAZER_BLADE_2018_BASE = 571;

const int USB_DEVICE_ID_RAZER_BLADE_2018_MERCURY = 576;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_2019 = 577;

const int USB_DEVICE_ID_RAZER_HUNTSMAN_TE = 579;

const int USB_DEVICE_ID_RAZER_BLADE_MID_2019_MERCURY = 581;

const int USB_DEVICE_ID_RAZER_BLADE_2019_BASE = 582;

const int USB_DEVICE_ID_RAZER_BLADE_STEALTH_LATE_2019 = 586;

const int USB_DEVICE_ID_RAZER_BLADE_STUDIO_EDITION_2019 = 589;

const int USB_DEVICE_ID_RAZER_CYNOSA_V2 = 606;

const int USB_DEVICE_ID_RAZER_CYNOSA_LITE = 575;

const int USB_DEVICE_ID_RAZER_BLACKWIDOW_V3_TK = 2596;

const int USB_DEVICE_ID_RAZER_HUNTSMAN_MINI = 599;

const int RAZER_BLACKWIDOW_REPORT_LEN = 90;

const int RAZER_BLACKWIDOW_CHROMA_WAVE_DIRECTION_LEFT = 2;

const int RAZER_BLACKWIDOW_CHROMA_WAVE_DIRECTION_RIGHT = 1;

const int RAZER_BLACKWIDOW_CHROMA_CHANGE_EFFECT = 10;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_NONE = 0;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_WAVE = 1;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_REACTIVE = 2;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_BREATH = 3;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_SPECTRUM = 4;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_CUSTOM = 5;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_STATIC = 6;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_CLEAR_ROW = 8;

const int RAZER_BLACKWIDOW_ULTIMATE_2016_EFFECT_STARLIGHT = 25;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_SET_KEYS = 9;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_RESET = 10;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_UNKNOWN = 11;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_UNKNOWN2 = 12;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_UNKNOWN3 = 13;

const int RAZER_BLACKWIDOW_CHROMA_EFFECT_UNKNOWN4 = 14;

const int RAZER_BLACKWIDOW_CHROMA_ROW_LEN = 22;

const int RAZER_BLACKWIDOW_CHROMA_ROWS_NUM = 6;

const int RAZER_STEALTH_ROW_LEN = 16;

const int RAZER_STEALTH_ROWS_NUM = 6;

const int RAZER_BLACKWIDOW_CHROMA_WAIT_MS = 1;

const int RAZER_BLACKWIDOW_CHROMA_WAIT_MIN_US = 600;

const int RAZER_BLACKWIDOW_CHROMA_WAIT_MAX_US = 800;

const int RAZER_FIREFLY_WAIT_MIN_US = 900;

const int RAZER_FIREFLY_WAIT_MAX_US = 1000;

const int USB_DEVICE_ID_RAZER_OROCHI_2011 = 19;

const int USB_DEVICE_ID_RAZER_DEATHADDER_3_5G = 22;

const int USB_DEVICE_ID_RAZER_ABYSSUS_1800 = 32;

const int USB_DEVICE_ID_RAZER_MAMBA_2012_WIRED = 36;

const int USB_DEVICE_ID_RAZER_MAMBA_2012_WIRELESS = 37;

const int USB_DEVICE_ID_RAZER_NAGA_2012 = 46;

const int USB_DEVICE_ID_RAZER_IMPERATOR = 47;

const int USB_DEVICE_ID_RAZER_OUROBOROS = 50;

const int USB_DEVICE_ID_RAZER_TAIPAN = 52;

const int USB_DEVICE_ID_RAZER_NAGA_HEX_RED = 54;

const int USB_DEVICE_ID_RAZER_DEATHADDER_2013 = 55;

const int USB_DEVICE_ID_RAZER_DEATHADDER_1800 = 56;

const int USB_DEVICE_ID_RAZER_OROCHI_2013 = 57;

const int USB_DEVICE_ID_RAZER_NAGA_2014 = 64;

const int USB_DEVICE_ID_RAZER_NAGA_HEX = 65;

const int USB_DEVICE_ID_RAZER_ABYSSUS = 66;

const int USB_DEVICE_ID_RAZER_DEATHADDER_CHROMA = 67;

const int USB_DEVICE_ID_RAZER_MAMBA_WIRED = 68;

const int USB_DEVICE_ID_RAZER_MAMBA_WIRELESS = 69;

const int USB_DEVICE_ID_RAZER_MAMBA_TE_WIRED = 70;

const int USB_DEVICE_ID_RAZER_OROCHI_CHROMA = 72;

const int USB_DEVICE_ID_RAZER_DIAMONDBACK_CHROMA = 76;

const int USB_DEVICE_ID_RAZER_NAGA_HEX_V2 = 80;

const int USB_DEVICE_ID_RAZER_NAGA_CHROMA = 83;

const int USB_DEVICE_ID_RAZER_DEATHADDER_3500 = 84;

const int USB_DEVICE_ID_RAZER_LANCEHEAD_WIRED = 89;

const int USB_DEVICE_ID_RAZER_LANCEHEAD_WIRELESS = 90;

const int USB_DEVICE_ID_RAZER_ABYSSUS_V2 = 91;

const int USB_DEVICE_ID_RAZER_DEATHADDER_ELITE = 92;

const int USB_DEVICE_ID_RAZER_ABYSSUS_2000 = 94;

const int USB_DEVICE_ID_RAZER_LANCEHEAD_TE_WIRED = 96;

const int USB_DEVICE_ID_RAZER_ATHERIS_RECEIVER = 98;

const int USB_DEVICE_ID_RAZER_BASILISK = 100;

const int USB_DEVICE_ID_RAZER_BASILISK_ULTIMATE = 134;

const int USB_DEVICE_ID_RAZER_BASILISK_ULTIMATE_RECEIVER = 136;

const int USB_DEVICE_ID_RAZER_NAGA_TRINITY = 103;

const int USB_DEVICE_ID_RAZER_ABYSSUS_ELITE_DVA_EDITION = 106;

const int USB_DEVICE_ID_RAZER_ABYSSUS_ESSENTIAL = 107;

const int USB_DEVICE_ID_RAZER_MAMBA_ELITE = 108;

const int USB_DEVICE_ID_RAZER_DEATHADDER_ESSENTIAL = 110;

const int USB_DEVICE_ID_RAZER_LANCEHEAD_WIRELESS_RECEIVER = 111;

const int USB_DEVICE_ID_RAZER_LANCEHEAD_WIRELESS_WIRED = 112;

const int USB_DEVICE_ID_RAZER_DEATHADDER_ESSENTIAL_WHITE_EDITION = 113;

const int USB_DEVICE_ID_RAZER_MAMBA_WIRELESS_RECEIVER = 114;

const int USB_DEVICE_ID_RAZER_MAMBA_WIRELESS_WIRED = 115;

const int USB_DEVICE_ID_RAZER_VIPER = 120;

const int USB_DEVICE_ID_RAZER_VIPER_8KHZ = 145;

const int USB_DEVICE_ID_RAZER_VIPER_ULTIMATE_WIRED = 122;

const int USB_DEVICE_ID_RAZER_VIPER_ULTIMATE_WIRELESS = 123;

const int USB_DEVICE_ID_RAZER_DEATHADDER_V2_PRO_WIRED = 124;

const int USB_DEVICE_ID_RAZER_DEATHADDER_V2_PRO_WIRELESS = 125;

const int USB_DEVICE_ID_RAZER_DEATHADDER_V2 = 132;

const int USB_DEVICE_ID_RAZER_DEATHADDER_V2_MINI = 140;

const int USB_DEVICE_ID_RAZER_VIPER_MINI = 138;

const int USB_DEVICE_ID_RAZER_BASILISK_V2 = 133;

const int USB_DEVICE_ID_RAZER_NAGA_LEFT_HANDED_2020 = 141;

const int RAZER_REPORT_LEN = 90;

const int RAZER_MAMBA_ROW_LEN = 15;

const int RAZER_MAMBA_TE_ROW_LEN = 16;

const int RAZER_DIAMONDBACK_ROW_LEN = 21;

const int RAZER_MOUSE_WAIT_MIN_US = 600;

const int RAZER_MOUSE_WAIT_MAX_US = 800;

const int RAZER_NEW_MOUSE_RECEIVER_WAIT_MIN_US = 31000;

const int RAZER_NEW_MOUSE_RECEIVER_WAIT_MAX_US = 31100;

const int RAZER_VIPER_MOUSE_RECEIVER_WAIT_MIN_US = 59900;

const int RAZER_VIPER_MOUSE_RECEIVER_WAIT_MAX_US = 60000;

const int USB_DEVICE_ID_RAZER_MOUSE_CHARGING_DOCK = 126;

const int RAZER_MOUSE_DOCK_WAIT_MIN_US = 600;

const int RAZER_MOUSE_DOCK_WAIT_MAX_US = 800;

const int USB_DEVICE_ID_RAZER_FIREFLY_HYPERFLUX = 104;

const int USB_DEVICE_ID_RAZER_FIREFLY = 3072;

const int USB_DEVICE_ID_RAZER_FIREFLY_V2 = 3076;

const int USB_DEVICE_ID_RAZER_GOLIATHUS_CHROMA = 3073;

const int USB_DEVICE_ID_RAZER_GOLIATHUS_CHROMA_EXTENDED = 3074;

const int RAZER_MOUSEMAT_WAIT_MIN_US = 900;

const int RAZER_MOUSEMAT_WAIT_MAX_US = 1000;

const int USB_DEVICE_ID_RAZER_KRAKEN_KITTY_EDITION = 3865;

const int RAZER_HEADPHONE_WAIT_MIN_US = 600;

const int RAZER_HEADPHONE_WAIT_MAX_US = 1000;

const int USB_DEVICE_ID_RAZER_CORE_X_CHROMA = 3866;

const int RAZER_EGPU_WAIT_MIN_US = 900;

const int RAZER_EGPU_WAIT_MAX_US = 1000;

const int USB_DEVICE_ID_RAZER_KRAKEN_CLASSIC = 1281;

const int USB_DEVICE_ID_RAZER_KRAKEN = 1284;

const int USB_DEVICE_ID_RAZER_KRAKEN_CLASSIC_ALT = 1286;

const int USB_DEVICE_ID_RAZER_KRAKEN_V2 = 1296;

const int USB_DEVICE_ID_RAZER_KRAKEN_ULTIMATE = 1319;

const int USB_INTERFACE_PROTOCOL_NONE = 0;

const int KYLIE_SET_LED_ADDRESS = 5933;

const int RAINIE_SET_LED_ADDRESS = 4104;

const int KYLIE_CUSTOM_ADDRESS_START = 4489;

const int RAINIE_CUSTOM_ADDRESS_START = 4489;

const int KYLIE_BREATHING1_ADDRESS_START = 5953;

const int RAINIE_BREATHING1_ADDRESS_START = 5598;

const int KYLIE_BREATHING2_ADDRESS_START = 5957;

const int KYLIE_BREATHING3_ADDRESS_START = 5965;

const int USB_DEVICE_ID_RAZER_NOMMO_CHROMA = 1303;

const int USB_DEVICE_ID_RAZER_NOMMO_PRO = 1304;

const int USB_DEVICE_ID_RAZER_CHROMA_MUG = 3847;

const int USB_DEVICE_ID_RAZER_CHROMA_BASE = 3848;

const int USB_DEVICE_ID_RAZER_CHROMA_HDK = 3849;

const int USB_DEVICE_ID_RAZER_MOUSE_BUNGEE_V3_CHROMA = 3869;

const int USB_DEVICE_ID_RAZER_BASE_STATION_V2_CHROMA = 3872;

const int RAZER_ACCESSORY_WAIT_MIN_US = 600;

const int RAZER_ACCESSORY_WAIT_MAX_US = 1000;

const int TYPE_KEYBOARD = 0;

const int TYPE_BLADE = 1;

const int TYPE_MOUSE = 2;

const int TYPE_MOUSE_DOCK = 3;

const int TYPE_MOUSE_MAT = 4;

const int TYPE_EGPU = 5;

const int TYPE_HEADPHONE = 6;

const int TYPE_ACCESSORY = 7;

const int USB_VENDOR_ID_RAZER = 5426;

typedef _c_razer_send_control_msg = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Void> data,
  ffi.Uint32 report_index,
);

typedef _dart_razer_send_control_msg = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Void> data,
  int report_index,
);

typedef _c_razer_send_control_msg_old_device = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Void> data,
  ffi.Uint32 report_value,
  ffi.Uint32 report_index,
  ffi.Uint32 report_size,
);

typedef _dart_razer_send_control_msg_old_device = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Void> data,
  int report_value,
  int report_index,
  int report_size,
);

typedef _c_razer_get_usb_response = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Uint32 report_index,
  ffi.Pointer<razer_report> request_report,
  ffi.Uint32 response_index,
  ffi.Pointer<razer_report> response_report,
  ffi.Int32 wait_us,
);

typedef _dart_razer_get_usb_response = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  int report_index,
  ffi.Pointer<razer_report> request_report,
  int response_index,
  ffi.Pointer<razer_report> response_report,
  int wait_us,
);

typedef _c_razer_calculate_crc = ffi.Uint8 Function(
  ffi.Pointer<razer_report> report,
);

typedef _dart_razer_calculate_crc = int Function(
  ffi.Pointer<razer_report> report,
);

typedef _c_clamp_u8 = ffi.Uint8 Function(
  ffi.Uint8 value,
  ffi.Uint8 min,
  ffi.Uint8 max,
);

typedef _dart_clamp_u8 = int Function(
  int value,
  int min,
  int max,
);

typedef _c_clamp_u16 = ffi.Uint16 Function(
  ffi.Uint16 value,
  ffi.Uint16 min,
  ffi.Uint16 max,
);

typedef _dart_clamp_u16 = int Function(
  int value,
  int min,
  int max,
);

typedef _c_is_blade_laptop = ffi.Uint8 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_is_blade_laptop = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_read_mode_game = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_mode_game = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_write_mode_macro = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_macro = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_macro_effect = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_macro_effect = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_read_mode_macro_effect = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_mode_macro_effect = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_write_mode_pulsate = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_pulsate = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_read_mode_pulsate = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_mode_pulsate = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_read_tartarus_profile_led_red = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_tartarus_profile_led_red = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_read_tartarus_profile_led_green = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_tartarus_profile_led_green = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_read_tartarus_profile_led_blue = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_tartarus_profile_led_blue = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_read_get_firmware_version = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_get_firmware_version = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
  ffi.Int32 speed,
);

typedef _dart_razer_attr_write_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
  int speed,
);

typedef _c_razer_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_starlight = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_starlight = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_read_set_logo = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_read_set_logo = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_set_logo = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_set_logo = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_mode_custom = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_mode_custom = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_set_fn_toggle = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_set_fn_toggle = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_set_brightness = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint16 brightness,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
  int count,
);

typedef _c_razer_attr_read_set_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_matrix_custom_frame = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Int32 count,
);

typedef _dart_razer_attr_write_matrix_custom_frame = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_left_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_side_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
  ffi.Int32 side,
);

typedef _dart_razer_attr_write_side_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
  int side,
);

typedef _c_razer_attr_write_left_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_left_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_right_mode_reactive = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_right_mode_reactive = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_read_dpi = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_dpi = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_dpi = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint16 dpi_x,
  ffi.Uint16 dpi_y,
);

typedef _dart_razer_attr_write_dpi = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int dpi_x,
  int dpi_y,
);

typedef _c_razer_attr_read_poll_rate = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_poll_rate = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_poll_rate = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint16 polling_rate,
);

typedef _dart_razer_attr_write_poll_rate = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int polling_rate,
);

typedef _c_razer_attr_read_matrix_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_matrix_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_matrix_brightness = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint8 brightness,
);

typedef _dart_razer_attr_write_matrix_brightness = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
);

typedef _c_razer_attr_read_scroll_led_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_scroll_led_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_scroll_led_brightness = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint8 brightness,
);

typedef _dart_razer_attr_write_scroll_led_brightness = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
);

typedef _c_razer_attr_read_logo_led_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_logo_led_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_logo_led_brightness = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint8 brightness,
);

typedef _dart_razer_attr_write_logo_led_brightness = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
);

typedef _c_razer_attr_read_left_led_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_left_led_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_left_led_brightness = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint8 brightness,
);

typedef _dart_razer_attr_write_left_led_brightness = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
);

typedef _c_razer_attr_read_right_led_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_attr_read_right_led_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_attr_write_right_led_brightness = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint8 brightness,
);

typedef _dart_razer_attr_write_right_led_brightness = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
);

typedef _c_razer_attr_write_logo_led_effect = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_led_effect = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_scroll_led_effect = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_scroll_led_effect = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_write_logo_led_rgb = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_attr_write_logo_led_rgb = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_attr_read_get_battery = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_get_battery = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_attr_read_is_charging = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _dart_razer_attr_read_is_charging = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
);

typedef _c_razer_mouse_dock_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_dock_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_dock_attr_write_mode_static_no_store = ffi.Int64
    Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_dock_attr_write_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_dock_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_dock_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_dock_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_dock_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_dock_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_dock_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_mouse_mat_attr_write_set_brightness = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint16 brightness,
  ffi.Uint64 count,
);

typedef _dart_razer_mouse_mat_attr_write_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
  int count,
);

typedef _c_razer_mouse_mat_attr_read_set_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_mouse_mat_attr_read_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_headphone_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_headphone_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_headphone_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_headphone_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_headphone_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_headphone_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_headphone_attr_write_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_headphone_attr_write_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_headphone_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_headphone_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_static_no_store = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_static_no_store = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_egpu_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_egpu_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_kraken_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_kraken_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_kraken_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_kraken_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_kraken_attr_write_mode_custom = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_kraken_attr_write_mode_custom = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_kraken_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_kraken_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_kraken_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_kraken_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_accessory_attr_write_mode_none = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_accessory_attr_write_mode_none = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_accessory_attr_write_mode_spectrum = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_accessory_attr_write_mode_spectrum = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_accessory_attr_write_mode_wave = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
  ffi.Int32 speed,
);

typedef _dart_razer_accessory_attr_write_mode_wave = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
  int speed,
);

typedef _c_razer_accessory_attr_write_mode_static = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_accessory_attr_write_mode_static = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_accessory_attr_write_mode_breath = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  ffi.Uint64 count,
);

typedef _dart_razer_accessory_attr_write_mode_breath = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Pointer<ffi.Int8> buf,
  int count,
);

typedef _c_razer_accessory_attr_read_set_brightness = ffi.Uint16 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _dart_razer_accessory_attr_read_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
);

typedef _c_razer_accessory_attr_write_set_brightness = ffi.Int64 Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  ffi.Uint16 brightness,
  ffi.Uint64 count,
);

typedef _dart_razer_accessory_attr_write_set_brightness = int Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> usb_dev,
  int brightness,
  int count,
);

typedef _c_getRazerUSBDeviceInterface
    = ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> Function(
  ffi.Int32 type,
);

typedef _dart_getRazerUSBDeviceInterface
    = ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> Function(
  int type,
);

typedef _c_closeRazerUSBDeviceInterface = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
);

typedef _dart_closeRazerUSBDeviceInterface = void Function(
  ffi.Pointer<ffi.Pointer<IOUSBDeviceInterface>> dev,
);

typedef _c_getAllRazerDevices = RazerDevices Function();

typedef _dart_getAllRazerDevices = RazerDevices Function();

typedef _c_closeAllRazerDevices = ffi.Void Function(
  RazerDevices devices,
);

typedef _dart_closeAllRazerDevices = void Function(
  RazerDevices devices,
);

typedef _typedefC_1 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  REFIID,
  ffi.Pointer<ffi.Pointer<ffi.Void>>,
);

typedef _typedefC_2 = ffi.Uint32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_3 = ffi.Uint32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_4 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<CFRunLoopSourceRef>>,
);

typedef _typedefC_5 = ffi.Pointer<CFRunLoopSourceRef> Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_6 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_7 = ffi.Uint32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_8 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_9 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_10 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_11 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_12 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_13 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint16>,
);

typedef _typedefC_14 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint16>,
);

typedef _typedefC_15 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint16>,
);

typedef _typedefC_16 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint16>,
);

typedef _typedefC_17 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_18 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_19 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_20 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_21 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint8,
  ffi.Pointer<ffi.Pointer<IOUSBConfigurationDescriptorPtr>>,
);

typedef _typedefC_22 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_23 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint8,
);

typedef _typedefC_24 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint64>,
  ffi.Pointer<AbsoluteTime>,
);

typedef _typedefC_25 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_26 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<IOUSBDevRequest>,
);

typedef IOAsyncCallback1 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_27 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<IOUSBDevRequest>,
  ffi.Pointer<ffi.NativeFunction<IOAsyncCallback1>>,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_28 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<IOUSBFindInterfaceRequest>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_29 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_30 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<IOUSBDevRequestTO>,
);

typedef _typedefC_31 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<IOUSBDevRequestTO>,
  ffi.Pointer<ffi.NativeFunction<IOAsyncCallback1>>,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_32 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint8,
);

typedef _typedefC_33 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_34 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_35 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_36 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint8>,
);

typedef _typedefC_37 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
);

typedef _typedefC_38 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint64>,
  ffi.Pointer<AbsoluteTime>,
);

typedef _typedefC_39 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<NumVersion>,
  ffi.Pointer<NumVersion>,
);

typedef _typedefC_40 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint64>,
  ffi.Pointer<AbsoluteTime>,
);

typedef _typedefC_41 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_42 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Uint32,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_43 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Uint32,
);

typedef _typedefC_44 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_45 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint32>,
);

typedef _typedefC_46 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint8,
  ffi.Uint8,
  ffi.Uint8,
);

typedef IOAsyncCallback2 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_47 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint64,
  ffi.Pointer<ffi.NativeFunction<IOAsyncCallback2>>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Uint64>,
);

typedef _typedefC_48 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint64,
);

typedef _typedefC_49 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint64,
);

typedef _typedefC_50 = ffi.Pointer<IONotificationPortRef> Function(
  ffi.Pointer<ffi.Void>,
);
